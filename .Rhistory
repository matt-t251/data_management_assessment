scale_fill_manual(values = colors) +
ggtitle("Piechart of learners by Continent")
ggsave("H:/Documents/FutureLearn/graphs/PieChartofContinents.png", plot = piechart, width = 6, height = 4, dpi = 300)
## INPUT: df_learners_no_duplicates (01-A.R)
## OUTPUT: graphs/PieChartofContinents.png
library('ProjectTemplate')
load.project()
# install.packages("tidyverse")
library(tidyverse)
# install.packages("countrycode")
library(countrycode)
#make a data frame of countries
df_country <- subset(df_learners_no_duplicates, select = c("detected_country"))
# Use the table() function to create a frequency table
country_counts <- table(df_country$detected_country)
# Convert the frequency table to a data frame
df_country <- as.data.frame(country_counts)
# Rename the columns for clarity
colnames(df_country) <- c("country", "count")
# remove -- (there are 873 --)
# df_country <- subset(df_country, country != "--")
# Sort the data frame by the count in descending order
df_country <- df_country[order(df_country$count, decreasing = TRUE), ]
# keep only the top 20 which excludes any country with less than 300 users
# df_country <- head(df_country, n=20)
# change country code to name
df_country$country <- countrycode(sourcevar = df_country$country, origin = "iso2c", destination = "country.name")
# Convert countries to continents using countrycode
df_country$Continent <- countrycode(df_country$country, "country.name", "Continent")
# Calculate the total count
total_count <- sum(df_country$count)
# Create a vector of colors (you can customize this as needed)
colors <- rainbow(length(unique(df_country$Continent)))
# Create a pie chart with different colors for each continent
piechart = ggplot(df_country, aes(x = "", y = count/total_count, fill = Continent)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
theme_void() +
scale_fill_manual(values = colors) +
ggtitle("Piechart of learners by Continent")
ggsave("H:/Documents/FutureLearn/graphs/PieChartofContinents.png", plot = piechart, width = 6, height = 4, dpi = 300)
## INPUT: df_learners_no_duplicates (01-A.R)
## OUTPUT: graphs/PieChartofContinents.png
library('ProjectTemplate')
load.project()
# install.packages("tidyverse")
library(tidyverse)
# install.packages("countrycode")
library(countrycode)
#make a data frame of countries
df_country <- subset(df_learners_no_duplicates, select = c("detected_country"))
# Use the table() function to create a frequency table
country_counts <- table(df_country$detected_country)
# Convert the frequency table to a data frame
df_country <- as.data.frame(country_counts)
# Rename the columns for clarity
colnames(df_country) <- c("country", "count")
# remove -- (there are 873 --)
# df_country <- subset(df_country, country != "--")
# Sort the data frame by the count in descending order
df_country <- df_country[order(df_country$count, decreasing = TRUE), ]
# keep only the top 20 which excludes any country with less than 300 users
# df_country <- head(df_country, n=20)
# change country code to name
df_country$country <- countrycode(sourcevar = df_country$country, origin = "iso2c", destination = "country.name")
# Convert countries to continents using countrycode
df_country$Continent <- countrycode(df_country$country, "country.name", "Continent")
# Calculate the total count
total_count <- sum(df_country$count)
# Create a vector of colors (you can customize this as needed)
colors <- rainbow(length(unique(df_country$Continent)))
# Create a pie chart with different colors for each continent
piechart = ggplot(df_country, aes(x = "", y = count/total_count, fill = Continent)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
theme_void() +
scale_fill_manual(values = colors) +
ggtitle("Piechart of learners by Continent")
ggsave("H:/Documents/FutureLearn/graphs/PieChartofContinents.png", plot = piechart, width = 6, height = 4, dpi = 300)
rlang::last_trace()
## INPUT: df_learners_no_duplicates (01-A.R)
## OUTPUT: graphs/PieChartofContinents.png
library('ProjectTemplate')
load.project()
# install.packages("tidyverse")
library(tidyverse)
# install.packages("countrycode")
library(countrycode)
#make a data frame of countries
df_country <- subset(df_learners_no_duplicates, select = c("detected_country"))
# Use the table() function to create a frequency table
country_counts <- table(df_country$detected_country)
# Convert the frequency table to a data frame
df_country <- as.data.frame(country_counts)
# Rename the columns for clarity
colnames(df_country) <- c("country", "count")
# remove -- (there are 873 --)
# df_country <- subset(df_country, country != "--")
# Sort the data frame by the count in descending order
df_country <- df_country[order(df_country$count, decreasing = TRUE), ]
# keep only the top 20 which excludes any country with less than 300 users
# df_country <- head(df_country, n=20)
# change country code to name
df_country$country <- countrycode(sourcevar = df_country$country, origin = "iso2c", destination = "country.name")
# Convert countries to continents using countrycode
df_country$continent <- countrycode(df_country$country, "country.name", "continent")
# Calculate the total count
total_count <- sum(df_country$count)
# Create a vector of colors (you can customize this as needed)
colors <- rainbow(length(unique(df_country$continent)))
# Create a pie chart with different colors for each continent
piechart = ggplot(df_country, aes(x = "", y = count/total_count, fill = continent)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
theme_void() +
scale_fill_manual(values = colors) +
ggtitle("Piechart of learners by Continent")
ggsave("H:/Documents/FutureLearn/graphs/PieChartofContinents.png", plot = piechart, width = 6, height = 4, dpi = 300)
(piechart)
## INPUT: df_learners_no_duplicates (01-A.R)
## OUTPUT: graphs/BarChartofCountries.png
library('ProjectTemplate')
load.project()
# install.packages("tidyverse")
library(tidyverse)
# install.packages("countrycode")
library(countrycode)
#make a data frame of countries
df_country <- subset(df_learners_no_duplicates, select = c("detected_country"))
# Use the table() function to create a frequency table
country_counts <- table(df_country$detected_country)
# Convert the frequency table to a data frame
df_country <- as.data.frame(country_counts)
# Rename the columns for clarity
colnames(df_country) <- c("country", "count")
# remove -- (there are 873 --)
df_country <- subset(df_country, country != "--")
# Sort the data frame by the count in descending order
df_country <- df_country[order(df_country$count, decreasing = TRUE), ]
# keep only the top 20 which excludes any country with less than 300 users
df_country <- head(df_country, n=20)
# change country code to name
df_country$country <- countrycode(sourcevar = df_country$country, origin = "iso2c", destination = "country.name")
# Create the bar chart
barchart <- ggplot(df_country, aes(x = reorder(country, -count), y = count)) +
geom_bar(stat = "identity", fill = "blue") +
labs(
title = "Bar Chart of Learners by Country",
x = "Country",
y = "Count"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("H:/Documents/FutureLearn/graphs/BarChartofCountries.png", plot = barchart, width = 6, height = 4, dpi = 300)
dp <- df_learners_no_duplicates
df <- df_learners_no_duplicates
View(df)
#make a data frame of countries
df_country <- subset(df_learners_no_duplicates, select = c("detected_country"))
# Use the table() function to create a frequency table
country_counts <- table(df_country$detected_country)
# Convert the frequency table to a data frame
df_country <- as.data.frame(country_counts)
# Rename the columns for clarity
colnames(df_country) <- c("country", "count")
# remove -- (there are 873 --)
df_country <- subset(df_country, country != "--")
# Sort the data frame by the count in descending order
df_country <- df_country[order(df_country$count, decreasing = TRUE), ]
View(df_country)
View(df_country)
## INPUT: df_learners (02-A.R)
##        df_country  (barchart_country_involvement.R)
## OUTPUT: graphs/BarChartofCompletion.png
library('ProjectTemplate')
load.project()
# install.packages("tidyverse")
library(tidyverse)
# install.packages("countrycode")
library(countrycode)
# create a vector of countries that have competed step 3.9
countries_completed_df <- subset(df_learners, step == "3.9")
countries_completed_df <- subset(countries_completed_df, select = c("detected_country"))
# create frequency table
country_count <- table(countries_completed_df$detected_country)
# convert to data frame
countries_completed_df <- as.data.frame(country_count)
# Rename the columns for clarity
colnames(countries_completed_df) <- c("country", "count")
# change country code to name
countries_completed_df$country <- countrycode(sourcevar = countries_completed_df$country, origin = "iso2c", destination = "country.name")
# the data frame df_country has a list of 20 countries who most signed up.
# the data frame countries_completed_df has the frequency of all country appirances of who compleated the course.
# take each row of the df_country and find it's appearance in the second data frame. (if it's missing then set to 0%.)
df_country$completion_count = 0
df_country$completion_percent = 0
for (n in 1:nrow(df_country)) {
print(n)
country_name = df_country$country[n]
print(country_name)
subset_df <- countries_completed_df[countries_completed_df$country == country_name, ]
if (nrow(subset_df) == 0) {
df_country$completion_percent[n] = 0
} else {
completion_count <- subset_df$count
if (completion_count == 0) {
df_country$completion_percent[n] = 0
} else {
df_country$completion_count[n] <- completion_count
df_country$completion_percent[n] = (df_country$completion_count[n] / df_country$count[n]) * 100
}
}
}
# Create the bar chart
barchart <- ggplot(df_country, aes(x = reorder(country, -count), y = completion_percent)) +
geom_bar(stat = "identity", fill = "blue") +
labs(
title = "Bar Chart of Countries",
x = "Country",
y = "Completion Percent"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("H:/Documents/FutureLearn/graphs/BarChartofCompletion.png", plot = barchart, width = 6, height = 4, dpi = 300)
View(df_country)
## Pre-processing script for cycle 1 (country_involvement)
## output is data frame of all learner IDs with their country, detected country, enrollment date, and role
## with all admins and duplicate learners removed.
# OUTPUT: df_learners_no_duplicates
if ( !exists("df_learners_no_duplicates")) {
print("data frame missing")
# create a dataframe of learners, their ID, country, and detected country from all years
appended_dataframe <- rbind(cyber.security.1_enrolments,
cyber.security.2_enrolments,
cyber.security.3_enrolments,
cyber.security.4_enrolments,
cyber.security.5_enrolments,
cyber.security.6_enrolments,
cyber.security.7_enrolments)
# organisation_admin removed
df_admin_removed <- subset(appended_dataframe, role != "organisation_admin")
# remove excess columns
# columns_to_keep <- c("learner_id", "enrolled_at", "role", "country", "detected_country")
# df_admin_removed <- subset(df_admin_removed, select = columns_to_keep) # 37257
#remove duplicate learners across entire data frame
df_learners_no_duplicates <- df_admin_removed[!duplicated(df_admin_removed$learner_id), ] #2052
cache("df_learners_no_duplicates")
} else {
print("data frame already created.")
}
## Pre-processing script for cycle 2 (country_completion)
## output is data frame of all learner IDs with their country, detected country, enrollment date, role,
## as well as Step and step completed date.
# OUTPUT: df_learners
# only 14095 users have completed a step
# took 7 minutes to process
if ( !exists("df_learners")) {
print("data frame missing")
# append the data frames
df_learner_steps <- rbind(cyber.security.1_step.activity,
cyber.security.2_step.activity,
cyber.security.3_step.activity,
cyber.security.4_step.activity,
cyber.security.5_step.activity,
cyber.security.6_step.activity,
cyber.security.7_step.activity)
# add the new columns
df_learners              <- df_learners_no_duplicates
df_learners$step         <- ""
df_learners$completed_at <- ""
for (n in 1:nrow(df_learners)) {
print(n)
# store a single user id
learner_id_char <- df_learners$learner_id[n]
# if the ID is in the data frame...
if (learner_id_char %in% df_learners$learner_id) {
# Find the rows where the learner_id matches in df_learners, it will return a vector of all instances.
row_index <- which(df_learner_steps$learner_id == learner_id_char)
# store the length of the vector
vector_length <- length(row_index)
# if row index has 0 elements, then user isn't in the steps data frame
if (vector_length == 0) {
# print("no user")
}
# if row index has 1 element, then user didn't finish first step
if (vector_length == 1) {
# print("user didn't finish first step")
}
# if all the elements are empty, then they also didn't finish any steps
if (all(df_learner_steps$last_completed_at == "")) {
# print("user didn't complete any step, (but started multiple)")
break
}
# if row index has 2 or more elements, then user finished at least one step
if (vector_length >= 2) {
# print("user finished one or more steps")
i = 0
temp_bool = TRUE
# while the last cell is empty, keep looping
while (temp_bool == TRUE) {
# if cell is empty, move one up
if (df_learner_steps$last_completed_at[row_index[length(row_index) -i]] == "") {
# print("last cell empty")
i = i+1
# if every row has been checked, move to the next user
if (i == length(row_index)){
# print("all cells checks, and no date available")
temp_bool = FALSE
}
# otherwise the last step has been identified
} else {
# print("last cell has date")
# save the date to variables
date_completed <- df_learner_steps$last_completed_at[row_index[length(row_index) -i]]
step_completed <- df_learner_steps$step[row_index[length(row_index) -i]]
# store the date and the step reached on the dr_learners
df_learners$completed_at[n] <- date_completed
df_learners$step[n] <- step_completed
temp_bool = FALSE
}
}
}
}
}
cache("df_learners")
} else {
print("data frame already created.")
}
View(df_learners)
## INPUT: df_learners_no_duplicates (01-A.R)
## OUTPUT: graphs/BarChartofCountries.png
library('ProjectTemplate')
load.project()
# install.packages("tidyverse")
library(tidyverse)
# install.packages("countrycode")
library(countrycode)
#make a data frame of countries
df_country <- subset(df_learners_no_duplicates, select = c("detected_country"))
# Use the table() function to create a frequency table
country_counts <- table(df_country$detected_country)
# Convert the frequency table to a data frame
df_country <- as.data.frame(country_counts)
# Rename the columns for clarity
colnames(df_country) <- c("country", "count")
# remove -- (there are 873 --)
df_country <- subset(df_country, country != "--")
# Sort the data frame by the count in descending order
df_country <- df_country[order(df_country$count, decreasing = TRUE), ]
# keep only the top 20 which excludes any country with less than 300 users
df_country <- head(df_country, n=20)
# change country code to name
df_country$country <- countrycode(sourcevar = df_country$country, origin = "iso2c", destination = "country.name")
# Create the bar chart
barchart <- ggplot(df_country, aes(x = reorder(country, -count), y = count)) +
geom_bar(stat = "identity", fill = "blue") +
labs(
title = "Bar Chart of Learners by Country",
x = "Country",
y = "Count"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("H:/Documents/FutureLearn/graphs/BarChartofCountries.png", plot = barchart, width = 6, height = 4, dpi = 300)
## INPUT: df_learners (02-A.R)
##        df_country  (barchart_country_involvement.R)
## OUTPUT: graphs/BarChartofCompletion.png
library('ProjectTemplate')
load.project()
# install.packages("tidyverse")
library(tidyverse)
# install.packages("countrycode")
library(countrycode)
# create a vector of countries that have competed step 3.9
countries_completed_df <- subset(df_learners, step == "3.9")
countries_completed_df <- subset(countries_completed_df, select = c("detected_country"))
# create frequency table
country_count <- table(countries_completed_df$detected_country)
# convert to data frame
countries_completed_df <- as.data.frame(country_count)
# Rename the columns for clarity
colnames(countries_completed_df) <- c("country", "count")
# change country code to name
countries_completed_df$country <- countrycode(sourcevar = countries_completed_df$country, origin = "iso2c", destination = "country.name")
# the data frame df_country has a list of 20 countries who most signed up.
# the data frame countries_completed_df has the frequency of all country appirances of who compleated the course.
# take each row of the df_country and find it's appearance in the second data frame. (if it's missing then set to 0%.)
df_country$completion_count = 0
df_country$completion_percent = 0
for (n in 1:nrow(df_country)) {
print(n)
country_name = df_country$country[n]
print(country_name)
subset_df <- countries_completed_df[countries_completed_df$country == country_name, ]
if (nrow(subset_df) == 0) {
df_country$completion_percent[n] = 0
} else {
completion_count <- subset_df$count
if (completion_count == 0) {
df_country$completion_percent[n] = 0
} else {
df_country$completion_count[n] <- completion_count
df_country$completion_percent[n] = (df_country$completion_count[n] / df_country$count[n]) * 100
}
}
}
# Create the bar chart
barchart <- ggplot(df_country, aes(x = reorder(country, -count), y = completion_percent)) +
geom_bar(stat = "identity", fill = "blue") +
labs(
title = "Bar Chart of Countries",
x = "Country",
y = "Completion Percent"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("H:/Documents/FutureLearn/graphs/BarChartofCompletion.png", plot = barchart, width = 6, height = 4, dpi = 300)
View(df_learners)
View(df_country)
## INPUT: df_learners_no_duplicates (01-A.R)
## OUTPUT: graphs/BarChartofCountries.png
library('ProjectTemplate')
load.project()
# install.packages("tidyverse")
library(tidyverse)
# install.packages("countrycode")
library(countrycode)
#make a data frame of countries
df_country <- subset(df_learners_no_duplicates, select = c("detected_country"))
# Use the table() function to create a frequency table
country_counts <- table(df_country$detected_country)
# Convert the frequency table to a data frame
df_country <- as.data.frame(country_counts)
# Rename the columns for clarity
colnames(df_country) <- c("country", "count")
# remove -- (there are 873 --)
df_country <- subset(df_country, country != "--")
# Sort the data frame by the count in descending order
df_country <- df_country[order(df_country$count, decreasing = TRUE), ]
# keep only the top 20 which excludes any country with less than 300 users
#df_country <- head(df_country, n=20)
# change country code to name
df_country$country <- countrycode(sourcevar = df_country$country, origin = "iso2c", destination = "country.name")
# Create the bar chart
barchart <- ggplot(df_country, aes(x = reorder(country, -count), y = count)) +
geom_bar(stat = "identity", fill = "blue") +
labs(
title = "Bar Chart of Learners by Country",
x = "Country",
y = "Count"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("H:/Documents/FutureLearn/graphs/BarChartofCountries.png", plot = barchart, width = 6, height = 4, dpi = 300)
## INPUT: df_learners (02-A.R)
##        df_country  (barchart_country_involvement.R)
## OUTPUT: graphs/BarChartofCompletion.png
library('ProjectTemplate')
load.project()
# install.packages("tidyverse")
library(tidyverse)
# install.packages("countrycode")
library(countrycode)
# create a vector of countries that have competed step 3.9
countries_completed_df <- subset(df_learners, step == "3.9")
countries_completed_df <- subset(countries_completed_df, select = c("detected_country"))
# create frequency table
country_count <- table(countries_completed_df$detected_country)
# convert to data frame
countries_completed_df <- as.data.frame(country_count)
# Rename the columns for clarity
colnames(countries_completed_df) <- c("country", "count")
# change country code to name
countries_completed_df$country <- countrycode(sourcevar = countries_completed_df$country, origin = "iso2c", destination = "country.name")
# the data frame df_country has a list of 20 countries who most signed up.
# the data frame countries_completed_df has the frequency of all country appirances of who compleated the course.
# take each row of the df_country and find it's appearance in the second data frame. (if it's missing then set to 0%.)
df_country$completion_count = 0
df_country$completion_percent = 0
for (n in 1:nrow(df_country)) {
print(n)
country_name = df_country$country[n]
print(country_name)
subset_df <- countries_completed_df[countries_completed_df$country == country_name, ]
if (nrow(subset_df) == 0) {
df_country$completion_percent[n] = 0
} else {
completion_count <- subset_df$count
if (completion_count == 0) {
df_country$completion_percent[n] = 0
} else {
df_country$completion_count[n] <- completion_count
df_country$completion_percent[n] = (df_country$completion_count[n] / df_country$count[n]) * 100
}
}
}
# Create the bar chart
barchart <- ggplot(df_country, aes(x = reorder(country, -count), y = completion_percent)) +
geom_bar(stat = "identity", fill = "blue") +
labs(
title = "Bar Chart of Countries",
x = "Country",
y = "Completion Percent"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("H:/Documents/FutureLearn/graphs/BarChartofCompletion.png", plot = barchart, width = 6, height = 4, dpi = 300)
View(df_country)
View(p)
View(df_country)
View(df_learners)
View(df_country)
