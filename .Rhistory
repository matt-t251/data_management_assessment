9*9
sin(pi/2)
help(abs)
x=3
y=x+3
y
x=x+y
x
is.double(x)
z=1.1
is.double(z)
x = "Orange"
is.double(x)
is.character(x)
x = FALSE
is.logical(x)
x = 0/0
x
4/0
-4/0
c(1,2,3,4,5,6)
c("zebra", "dog", "apple")
a=c("zebra", "dog", "apple")
length(a)
1:6
seq(10,13, by = .5)
seq(2,7, length.out = 4)
x = seq(-10,10,by=2)
x*2
x+2
x*x
x/x
x = seq(-10,10,by=2)
x*2
x+2
x*x
x/x
x = seq(-10,10,by=2)
x
x*2
x+2
x*x
x/x
x = seq(-10,10,by=10)
x
x=5:9
x[2]
x[2:3]
x[0]
x[1]
x[x > 7]
x=x[x > 7]
x=x[x > 8]
is.double(x)
is.vector(x)
A = matrix(c(1,2,3,4,5,6), nrow=2, ncol=3, byrow = TRUE)
A
A = matrix(c(1,2,3,4,5,6), nrow=2, ncol=3, byrow = FALSE)
A
A[1,]
A[,1]
A[2,3]
help(base)
?acos
help(help)
2*2
1/(1+ln(2))
log(2)
1/(1+log(2))
4!
exp(4)
e
exp(1)
exp(10)
round(exp(10), digits=0)
cos(pi)
help(base)
help(cos)
acos(0.5)
log(0)
log(0, 10)
(x=9)
z = x + y
z = x + y
z
z
z
z
x = 2
y = 2
z = x + y
z
x = 2
y = 2
z = x + y
z
x = 2
y = 2
z = x + y
z
source("C:/Users/c3074667/OneDrive - Newcastle University/Data Management/test R script.R")
source("C:/Users/c3074667/OneDrive - Newcastle University/Data Management/test R script.R")
z
ls()
rm(x)
x
x=5
x
rm(x)
x
rm(list=ls())
z=3
z
is.interger(z)
is.integer(z)
as.integer(z)
is.integer(z)
z=as.integer(z)
is.integer(z)
z=as.character(z)
is.integer(z)
is.character(z)
z=as.integer(z)
is.character(z)
z=as.integer(z)
is.integer(z)
word_1="hello"
word_2=" world"
word_2="world"
word_3=cat(word_1,word_2, sep=" ")
x=10
y=11
z=12
(d=x^2 + y^2 + z^2)
c(3,"Y",TRUE)
x = > c(3,"Y",TRUE)
x = c(3,"Y",TRUE)
x
is.double(x[1])
is.logical(x[3])
x[1]
x[1] = as.double(x[1])
x[1]
z = as.double(x[1])
pi:6
6:pi
x=seq(-4,4,legth.out(5))
x=seq(-4,4,legth.out=5)
x=seq(-4,4,length.out=5)
x=seq(-4,10,length.out=6)
sum(x)
mean(x)
sort(x)
rev(x)
range(x)
x=5:9
x[x > 7]
x=c(2,6,-4,2,6,7,8)
which(x==6)
matrix(seq(1,50),nrow=5,ncol=10,byrow=TRUE)
matrix(seq(1,50),nrow=5,ncol=10,byrow=TRUE)
A = matrix(seq(1,50),nrow=5,ncol=10,byrow=TRUE)
sum(A)
average(A)
mean(A)
mean(A[5,])
B=A
A*B
A*B
A/B
A-B
A-2
install.packages("ProjectTemplate")
library("ProjectTemplate")
create.project("cashflow_analysis")
create.project("cashflow_analysis")
create.project("cashflow_analysis")
setwd("~/Documents/FutureLearn")
library("ProjectTemplate")
load.project()
View(df_learner_steps)
View(df_learners)
View(df_temp_learners)
df_lerners = df_temp_learners
df_learners = df_temp_learners
load.project()
View(df_lerners)
View(df_learners_no_duplicates)
temp_df = subset(df_learners_no_duplicates, country)
which(df_learners_no_duplicates$country == "Unknown")
temp_df = which(df_learners_no_duplicates$country == "Unknown")
subset(df_learners_no_duplicates, df_learners_no_duplicates$country == df_learners_no_duplicates$detected_country)
how_many_correct = subset(df_learners_no_duplicates, df_learners_no_duplicates$country == df_learners_no_duplicates$detected_country)
View(how_many_correct)
how_many_correct = subset(df_learners_no_duplicates, df_learners_no_duplicates$country != df_learners_no_duplicates$detected_country)
how_many_incorrect = subset(how_many_correct, how_many_correct$country != "Unknown")
View(how_many_incorrect)
how_many_incorrect = subset(how_many_correct, how_many_correct$detected_country != "--")
how_many_incorrect = subset(how_many_correct, how_many_correct$country != "Unknown")
how_many_incorrect = subset(how_many_incorrect, how_many_incorrect$detected_country != "--")
View(df_admin_removed)
library("tinytex")
# Load ggplot2 package
library(ggplot2)
# Define the percentage values for each continent
continent_perc <- c(Asia = 0.36, Europe = 0.30, Africa = 0.18, North_America = 0.08, South_America = 0.05, Oceania = 0.03)
# Define the label colors for each continent
continent_col <- c(Asia = "orange", Europe = "purple", Africa = "red", North_America = "blue", South_America = "green", Oceania = "yellow")
# Define the label positions for each continent
continent_pos <- data.frame(
continent = names(continent_perc),
x = c(100, 20, 25, -120, -65, 150),
y = c(30, 50, 0, 40, -15, -25)
)
# Get the world map data
world_map <- map_data("world")
updateR()
installr()
library("installr")
install.packages("installr")
install.packages("maps", repos = "https://cran.rstudio.com")
